ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
y_pred = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados de Regresion Polinomica
y_pred = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados de Regresion Polinomica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresion Polinomica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level3 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizacion del Modelo Lineal
library(ggplot2) # Instalar con install.packages('ggplot2')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion lineal del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Visualizacion del Modelo Polinomico
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados de Regresion Polinomica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('Position_Salaries.csv')
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresión Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresión Polinómica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
n
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresión Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresión Polinómica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualización del modelo lineal
# install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = "blue") +
ggtitle("Predicción lineal del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Visualización del modelo polinómico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color = "blue") +
ggtitle("Predicción polinómica del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Predicción de nuevos resultados con Regresión Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Predicción de nuevos resultados con Regresión Polinómica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresion Polinomica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level3 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizacion del Modelo Lineal
library(ggplot2) # Instalar con install.packages('ggplot2')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion lineal del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Visualizacion del Modelo Polinomico
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados de Regresion Polinomica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresión Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresión Polinómica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualización del modelo lineal
# install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = "blue") +
ggtitle("Predicción lineal del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Visualización del modelo polinómico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color = "blue") +
ggtitle("Predicción polinómica del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Predicción de nuevos resultados con Regresión Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Predicción de nuevos resultados con Regresión Polinómica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresion Polinomica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizacion del Modelo Lineal
library(ggplot2) # Instalar con install.packages('ggplot2')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion lineal del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Visualizacion del Modelo Polinomico
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados de Regresion Polinomica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresion Polinomica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizacion del Modelo Lineal
library(ggplot2) # Instalar con install.packages('ggplot2')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion lineal del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Visualizacion del Modelo Polinomico
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados de Regresion Polinomica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresion Polinomica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizacion del Modelo Lineal
library(ggplot2) # Instalar con install.packages('ggplot2')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion lineal del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Visualizacion del Modelo Polinomico
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Prediccion de nuevos resultados de Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados de Regresion Polinomica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
seq?
?seq
lm?
?lm
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresion Polinomica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizacion del Modelo Lineal
library(ggplot2) # Instalar con install.packages('ggplot2')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(lin_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color = 'blue') +
ggtitle('Prediccion lineal del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Visualizacion del Modelo Polinomico
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresion Polinomica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizacion del Modelo Lineal
library(ggplot2) # Instalar con install.packages('ggplot2')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = 'blue') +
ggtitle('Prediccion lineal del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Visualizacion del Modelo Polinomico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg, newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color = 'blue') +
ggtitle('Prediccion polinomica del sueldo en funcion del nivel del empleado') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
# Prediccion de nuevos resultados con Regresion Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Prediccion de nuevos resultados con Regresion Polinomica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
install.packages('e1071')
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion con el Conjunto de Datos
# Crear nuestra variable de regresion aqui
library(e1071) # Instalar con install.packages('e1071')
View(dataset)
?svm
regression = svm(formula = Salary ~ .,
data = dataset)
View(regression)
regression = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression')
regression = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial')
# Prediccion de nuevos resultados con SVR
y_pred = predict(regression, newdata = data.frame(Level = 6.5))
# Visualizacion del Modelo SVR
library(ggplot2) # Instalar con install.packages('ggplot2')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regression,
newdata = data.frame(Level = x_grid))),
color = 'blue') +
ggtitle('Prediccion (SVR)') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion con el Conjunto de Datos
library(rpart) # Instalar con install.packages('rpart')
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('data/Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresion con el Conjunto de Datos
library(rpart) # Instalar con install.packages('rpart')
regression = rpart(formula = Salary ~ .,
data = dataset)
# Prediccion de nuevos resultados con Arbol de Regresion
y_pred = predict(regression, newdata = data.frame(Level = 6.5))
# Visualizacion del Modelo de Arbol de Regresion
library(ggplot2) # Instalar con install.packages('ggplot2')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regression,
newdata = data.frame(Level = x_grid))),
color = 'blue') +
ggtitle('Prediccion con Arbol de Decision (Modelo de Regresion)') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regression,
newdata = data.frame(Level = dataset$Level))),
color = 'blue') +
ggtitle('Prediccion con Arbol de Decision (Modelo de Regresion)') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
?rpart
regression = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
# Prediccion de nuevos resultados con Arbol de Regresion
y_pred = predict(regression, newdata = data.frame(Level = 6.5))
# Visualizacion del Modelo de Arbol de Regresion
library(ggplot2) # Instalar con install.packages('ggplot2')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regression,
newdata = data.frame(Level = dataset$Level))),
color = 'blue') +
ggtitle('Prediccion con Arbol de Decision (Modelo de Regresion)') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regression,
newdata = data.frame(Level = x_grid))),
color = 'blue') +
ggtitle('Prediccion con Arbol de Decision (Modelo de Regresion)') +
xlab('Nivel del empleado') +
ylab('Sueldo (en $)')
