setwd("~/repos/machinelearning-az/datasets/Part 1 - Data Preprocessing")
setwd("~/repos/machinelearning-az/datasets/Part 1 - Data Preprocessing")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
# Tratamiento de los valores NA
dataset$Age
# Tratamiento de los valores NA
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
View(dataset)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
View(dataset)
# Dividir los datos en conjunto de entrenamiento y conjunto de test
library(caTools) # Instalar con install.packages('caTools')
install.packages('caTools')
install.packages("caTools")
setwd("~/repos/machinelearning-az/datasets/Part 1 - Data Preprocessing")
dataset = read.csv('Data.csv')
# Tratamiento de los valores NA
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Codificar las variables categoricas
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
# Dividir los datos en conjunto de entrenamiento y conjunto de test
library(caTools) # Instalar con install.packages('caTools')
set.seed(123) # Para que salgan los mismos resultados que en el curso
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
# Escalado de valores
training_set = scale(training_set)
# Escalado de valores
training_set[, 2:3] = scale(training_set[, 2:3])
testing_set[, 2:3] = scale(testing_set[, 2:3])
View(dataset)
View(testing_set)
View(testing_set)
View(testing_set)
View(testing_set)
View(training_set)
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('Salary_Data.csv')
setwd("~/repos/machinelearning-az/datasets/Part 2 - Regression")
# Importar el dataset
dataset = read.csv('Salary_Data.csv')
View(dataset)
# Dividir los datos en conjunto de entrenamiento y conjunto de test
library(caTools) # Instalar con install.packages('caTools')
set.seed(123) # Para que salgan los mismos resultados que en el curso
# 20 individuos para entrenar y 10 individuos para validar
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
View(training_set)
View(testing_set)
# Ajustar el modelo de regresion linal simple con el conjunto de entrenamiento
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
sumary(regressor)
summary(regressor)
# Predecir resultados con el conjunto de test
y_pred = predict(regressor, newdata = testing_set)
y_pred
View(testing_set)
install.packages('ggplot2')
# Visualizacion de los resultados en el conjunto de entrenamiento
library(ggplot2) # Instalar con install.packages('ggplot2')
ggplot2() +
geom_point(aes(x = training_set$YearsExperience,
y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años de Experiencia (Conjunto de Entrenamiento)') +
xlab('Años de Experiencia') +
ylab('Suelo (en $)')
ggplot() +
geom_point(aes(x = training_set$YearsExperience,
y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años de Experiencia (Conjunto de Entrenamiento)') +
xlab('Años de Experiencia') +
ylab('Suelo (en $)')
ggplot() +
geom_point(aes(x = testing_set$YearsExperience,
y = testing_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años de Experiencia (Conjunto de Testing)') +
xlab('Años de Experiencia') +
ylab('Suelo (en $)')
